version: '3.8'

services:
  mysql-db:
     image: mysql:8.0
     container_name: mysql-db
     environment:
       MYSQL_ROOT_PASSWORD: "cindaa123."
       MYSQL_DATABASE: adoptionProject
     ports:
       - "3307:3306"
     volumes:
       - mysql-data:/var/lib/mysql
     networks:
       - monitoring
     healthcheck:
       test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
       interval: 10s
       timeout: 5s
       retries: 5

  backend:
    build: .
    image: devops-backend
    container_name: backend-adoption
    ports:
      - "8089:8089"
    depends_on:
      mysql-db:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/adoptionProject?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: "cindaa123."
      SERVER_PORT: "8089"
      SERVER_SERVLET_CONTEXT_PATH: "/adoption"
      MANAGEMENT_SERVER_PORT: "8089"
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "*"
      MANAGEMENT_ENDPOINTS_WEB_BASE_PATH: "/actuator"
      MANAGEMENT_ENDPOINT_HEALTH_SHOW-DETAILS: "always"
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: "true"
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: "true"
      SPRING_APPLICATION_NAME: "adoption-Project"
      SPRING_PROFILES_ACTIVE: "dev"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
      SPRING_JPA_SHOW_SQL: "true"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8089/adoption/actuator/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 10
      start_period: 60s
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    restart: unless-stopped  # Ajouter cette ligne
    healthcheck:
      test: ["CMD", "wget", "-q", "-O", "-", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - backend
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - monitoring
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"  # Mot de passe admin
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
      GF_SMTP_ENABLED: "true"
      GF_SMTP_HOST:  "smtp.gmail.com:587"
      GF_SMTP_USER: "chammemcinda@gmail.com"
      GF_SMTP_PASSWORD: "lkrc qmfc brpi vavz"
      GF_SMTP_SKIP_VERIFY: "true"
      GF_SMTP_FROM_ADDRESS: "chammemcinda@gmail.com"
      GF_SMTP_FROM_NAME: "Grafana Alert"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    ports:
      - "9091:9091"
    networks:
      - monitoring
 

volumes:
  mysql-data:
  grafana-storage:
  prometheus-data:

networks:
  monitoring:
    driver: bridge


